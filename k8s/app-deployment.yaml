apiVersion: apps/v1
kind: Deployment
metadata:
  name: flight-reservation-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flight-reservation-api
  template:
    metadata:
      labels:
        app: flight-reservation-api
    spec:
      containers:
      - name: flight-reservation-api
        image: ghcr.io/micheal-ndoh/spring-boot-dc:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/flightdb
        - name: SPRING_DATASOURCE_USERNAME
          value: mick
        - name: SPRING_DATASOURCE_PASSWORD
          value: password
---
apiVersion: v1
kind: Service
metadata:
  name: flight-reservation-api
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
  selector:
    app: flight-reservation-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flight-reservation-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: flight-reservation-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flight-reservation-api
            port:
              number: 8080 